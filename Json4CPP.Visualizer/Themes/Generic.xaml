<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:Json4CPP.Visualizer.Converter"
                    xmlns:control="clr-namespace:Json4CPP.Visualizer.Control"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
  
  <converter:MathConverterSingleValue x:Key="MathConverterSingleValue"/>
  <converter:MathConverterMultiValue x:Key="MathConverterMultiValue"/>
  
  <Style TargetType="{x:Type control:PlusButton}"
         BasedOn="{StaticResource {x:Type Button}}">
    <Style.Setters>
      <Setter Property="Width"
              Value="20"/>
      <Setter Property="Height"
              Value="20"/>
      <Setter Property="Foreground"
              Value="White"/>
    </Style.Setters>
  </Style>

  <Style x:Key="DeleteItem"
         TargetType="{x:Type control:PlusButton}"
         BasedOn="{StaticResource {x:Type control:PlusButton}}">
    <Style.Setters>
      <Setter Property="Angle"
              Value="45"/>
      <Setter Property="HorizontalAlignment"
              Value="Left"/>
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="OrangeRed"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="NewItem"
         TargetType="{x:Type Button}"
         BasedOn="{StaticResource {x:Type Button}}">
    <Style.Setters>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Background="Transparent">
              <StackPanel Orientation="Horizontal">
                <control:PlusButton x:Name="btn"/>
                <TextBlock Text="Add new item"
                           Margin="4,0,4,0"/>
              </StackPanel>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="IsMouseOver"
                       Value="True">
                <Setter TargetName="btn"
                        Property="Background"
                        Value="LimeGreen"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="HorizontalAlignment"
              Value="Left"/>
    </Style.Setters>
  </Style>

  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.Static.Stroke"
                   Color="#FF818181"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.Static.Fill"
                   Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.MouseOver.Stroke"
                   Color="#FF27C7F7"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.MouseOver.Fill"
                   Color="#FFCCEEFB"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.Static.Checked.Stroke"
                   Color="#FF262626"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.Static.Checked.Fill"
                   Color="#FF595959"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.MouseOver.Checked.Stroke"
                   Color="#FF1CC4F7"/>
  <SolidColorBrush x:Key="TreeViewItemEx.TreeArrow.MouseOver.Checked.Fill"
                   Color="#FF82DFFB"/>
  <PathGeometry x:Key="TreeArrow"
                Figures="M0,0 L0,6 L6,0 z"/>
  <Style x:Key="ExpandCollapseToggleStyle"
         TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable"
            Value="False"/>
    <Setter Property="Width"
            Value="16"/>
    <Setter Property="Height"
            Value="16"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="Transparent"
                  Height="16"
                  Padding="5,5,5,5"
                  Width="16">
            <Path x:Name="ExpandPath"
                  Data="{StaticResource TreeArrow}"
                  Fill="{StaticResource TreeViewItemEx.TreeArrow.Static.Fill}"
                  Stroke="{StaticResource TreeViewItemEx.TreeArrow.Static.Stroke}">
              <Path.RenderTransform>
                <RotateTransform Angle="135"
                                 CenterY="3"
                                 CenterX="3"/>
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
              <Setter Property="RenderTransform"
                      TargetName="ExpandPath">
                <Setter.Value>
                  <RotateTransform Angle="180"
                                   CenterY="3"
                                   CenterX="3"/>
                </Setter.Value>
              </Setter>
              <Setter Property="Fill"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItemEx.TreeArrow.Static.Checked.Fill}"/>
              <Setter Property="Stroke"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItemEx.TreeArrow.Static.Checked.Stroke}"/>
            </Trigger>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Stroke"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItemEx.TreeArrow.MouseOver.Stroke}"/>
              <Setter Property="Fill"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItemEx.TreeArrow.MouseOver.Fill}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsMouseOver"
                           Value="True"/>
                <Condition Property="IsChecked"
                           Value="True"/>
              </MultiTrigger.Conditions>
              <Setter Property="Stroke"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItemEx.TreeArrow.MouseOver.Checked.Stroke}"/>
              <Setter Property="Fill"
                      TargetName="ExpandPath"
                      Value="{StaticResource TreeViewItemEx.TreeArrow.MouseOver.Checked.Fill}"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemExFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type control:TreeViewItemEx}">
    <Setter Property="Background"
            Value="Transparent"/>
    <Setter Property="HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Padding"
            Value="1,0,0,0"/>
    <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    <Setter Property="FocusVisualStyle"
            Value="{StaticResource TreeViewItemExFocusVisual}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type control:TreeViewItemEx}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19"
                                Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <FrameworkElement x:Name="Row0Column0"
                              Grid.Row="0"
                              Grid.Column="0"/>
            <ToggleButton x:Name="Expander"
                          ClickMode="Press"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ExpandCollapseToggleStyle}"/>
            <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Grid.Column="1"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="true">
              <StackPanel Orientation="Horizontal">
                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Margin="0,0,4,0"/>
                <control:PlusButton x:Name="Part_DeleteItem"
                                    Style="{StaticResource DeleteItem}"/>
              </StackPanel>
            </Border>
            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Grid.Row="1"/>
            <Border x:Name="NewItemBd"
                    Grid.Row="2"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="{TemplateBinding Margin}"
                    Padding="{TemplateBinding Padding}">
              <Button x:Name="Part_NewItem"
                      Style="{StaticResource NewItem}"/>
            </Border>
            <Path x:Name="Path"
                  Grid.ColumnSpan="3"
                  Grid.RowSpan="3"
                  StrokeThickness="1"
                  Stroke="LightGray"
                  SnapsToDevicePixels="True">
              <Path.Data>
                <PathGeometry>
                  <PathGeometry.Figures>
                    <PathFigureCollection>
                      <PathFigure IsClosed="False">
                        <PathFigure.StartPoint>
                          <MultiBinding Converter="{StaticResource MathConverterMultiValue}">
                            <MultiBinding.ConverterParameter>
                              <x:Array Type="{x:Type sys:String}">
                                <sys:String>{0} / 2</sys:String>
                                <sys:String>{1}</sys:String>
                              </x:Array>
                            </MultiBinding.ConverterParameter>
                            <Binding ElementName="Row0Column0"
                                     Path="ActualWidth"/>
                            <Binding ElementName="Row0Column0"
                                     Path="ActualHeight"/>
                          </MultiBinding>
                        </PathFigure.StartPoint>
                        <PathFigure.Segments>
                          <PathSegmentCollection>
                            <LineSegment>
                              <LineSegment.Point>
                                <MultiBinding Converter="{StaticResource MathConverterMultiValue}">
                                  <MultiBinding.ConverterParameter>
                                    <x:Array Type="{x:Type sys:String}">
                                      <sys:String>{0} / 2</sys:String>
                                      <sys:String>{1} + {2} + {3} / 2 + {4}</sys:String>
                                    </x:Array>
                                  </MultiBinding.ConverterParameter>
                                  <Binding ElementName="Row0Column0"
                                           Path="ActualWidth"/>
                                  <Binding ElementName="Bd"
                                           Path="ActualHeight"/>
                                  <Binding ElementName="ItemsHost"
                                           Path="ActualHeight"/>
                                  <Binding ElementName="NewItemBd"
                                           Path="ActualHeight"/>
                                  <Binding RelativeSource="{RelativeSource AncestorType={x:Type control:TreeViewItemEx}}"
                                           Path="Margin.Top"/>
                                </MultiBinding>
                              </LineSegment.Point>
                            </LineSegment>
                            <LineSegment>
                              <LineSegment.Point>
                                <MultiBinding Converter="{StaticResource MathConverterMultiValue}">
                                  <MultiBinding.ConverterParameter>
                                    <x:Array Type="{x:Type sys:String}">
                                      <sys:String>{0} * 3 / 4 + {1} + {2}</sys:String>
                                      <sys:String>{3} + {4} + {5} / 2 + {6}</sys:String>
                                    </x:Array>
                                  </MultiBinding.ConverterParameter>
                                  <Binding ElementName="Row0Column0"
                                           Path="ActualWidth"/>
                                  <Binding RelativeSource="{RelativeSource AncestorType={x:Type control:TreeViewItemEx}}"
                                           Path="Padding.Left"/>
                                  <Binding RelativeSource="{RelativeSource AncestorType={x:Type control:TreeViewItemEx}}"
                                           Path="Margin.Left"/>
                                  <Binding ElementName="Bd"
                                           Path="ActualHeight"/>
                                  <Binding ElementName="ItemsHost"
                                           Path="ActualHeight"/>
                                  <Binding ElementName="NewItemBd"
                                           Path="ActualHeight"/>
                                  <Binding RelativeSource="{RelativeSource AncestorType={x:Type control:TreeViewItemEx}}"
                                           Path="Margin.Top"/>
                                </MultiBinding>
                              </LineSegment.Point>
                            </LineSegment>
                          </PathSegmentCollection>
                        </PathFigure.Segments>
                      </PathFigure>
                    </PathFigureCollection>
                  </PathGeometry.Figures>
                </PathGeometry>
              </Path.Data>
            </Path>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="EditMode"
                     Value="False">
              <Setter TargetName="Part_DeleteItem"
                      Property="Visibility"
                      Value="Collapsed"/>
              <Setter TargetName="NewItemBd"
                      Property="Visibility"
                      Value="Collapsed"/>
              <Setter TargetName="Path"
                      Property="Visibility"
                      Value="Collapsed"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="EditMode"
                           Value="true"/>
                <Condition Property="IsMouseReallyOver"
                           Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Part_DeleteItem"
                      Property="Visibility"
                      Value="Hidden"/>
            </MultiTrigger>
            <Trigger Property="Deletable"
                     Value="False">
              <Setter TargetName="Part_DeleteItem"
                      Property="Visibility"
                      Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsExpanded"
                     Value="false">
              <Setter Property="Visibility"
                      TargetName="ItemsHost"
                      Value="Collapsed"/>
              <Setter Property="Visibility"
                      TargetName="NewItemBd"
                      Value="Collapsed"/>
              <Setter TargetName="Path"
                      Property="Visibility"
                      Value="Collapsed"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="HasItems"
                           Value="false"/>
                <Condition Property="EmptyExpandable"
                           Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="Visibility"
                      TargetName="Expander"
                      Value="Hidden"/>
            </MultiTrigger>
            <Trigger Property="IsSelected"
                     Value="true">
              <Setter Property="Background"
                      TargetName="Bd"
                      Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected"
                           Value="true"/>
                <Condition Property="IsSelectionActive"
                           Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="Background"
                      TargetName="Bd"
                      Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="false">
              <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing"
               Value="true">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  
  <Style TargetType="{x:Type control:BorderEx}">
    <Style.Setters>
      <Setter Property="RenderTransform">
        <Setter.Value>
          <TransformGroup>
            <TranslateTransform>
              <TranslateTransform.X>
                <Binding Path="Width"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"
                         Converter="{StaticResource MathConverterSingleValue}"
                         ConverterParameter="{}-{0} / 2"/>
              </TranslateTransform.X>
              <TranslateTransform.Y>
                <Binding Path="Height"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"
                         Converter="{StaticResource MathConverterSingleValue}"
                         ConverterParameter="{}-{0} / 2"/>
              </TranslateTransform.Y>
            </TranslateTransform>
            <ScaleTransform>
              <ScaleTransform.ScaleX>
                <Binding Path="Scale"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
              </ScaleTransform.ScaleX>
              <ScaleTransform.ScaleY>
                <MultiBinding Converter="{StaticResource MathConverterMultiValue}"
                              ConverterParameter="{}({1} - ({0} - {0} * {2})) / {1}">
                  <Binding Path="Width"
                           RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
                  <Binding Path="Height"
                           RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
                  <Binding Path="Scale"
                           RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
                </MultiBinding>
              </ScaleTransform.ScaleY>
            </ScaleTransform>
            <RotateTransform>
              <RotateTransform.Angle>
                <Binding Path="Angle"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
              </RotateTransform.Angle>
            </RotateTransform>
          </TransformGroup>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  
  <Style TargetType="{x:Type Button}"
         BasedOn="{StaticResource {x:Type Button}}">
    <Style.Setters>
      <Setter Property="Padding"
              Value="4,0,4,0"/>
    </Style.Setters>
  </Style>
  
  <Style TargetType="{x:Type TextBlock}"
         BasedOn="{StaticResource {x:Type TextBlock}}">
    <Style.Setters>
      <Setter Property="TextTrimming"
              Value="CharacterEllipsis"/>
      <Setter Property="VerticalAlignment"
              Value="Center"/>
    </Style.Setters>
  </Style>
  
  <Style TargetType="{x:Type CheckBox}"
         BasedOn="{StaticResource {x:Type CheckBox}}">
    <Style.Setters>
      <Setter Property="VerticalContentAlignment"
              Value="Center"/>
    </Style.Setters>
  </Style>
  
  <Style TargetType="{x:Type TextBox}"
         BasedOn="{StaticResource {x:Type TextBox}}">
    <Style.Setters>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
              <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Setter Property="Background"
              Value="Transparent"/>
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="IsEnabled"
               Value="False">
        <Setter Property="Opacity"
                Value="0.56"/>
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="BorderBrush"
                Value="#FFC5DAED"/>
      </Trigger>
      <Trigger Property="IsFocused"
               Value="True">
        <Setter Property="BorderBrush"
                Value="#FFB5CFE7"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>