<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:Json4CPP.Visualizer.Converter"
                    xmlns:control="clr-namespace:Json4CPP.Visualizer.Control">
  <converter:MathConverterSingleValue x:Key="MathConverterSingleValue"/>
  <converter:MathConverterMultiValue x:Key="MathConverterMultiValue"/>
  <Style TargetType="{x:Type control:BorderEx}">
    <Style.Setters>
      <Setter Property="RenderTransform">
        <Setter.Value>
          <TransformGroup>
            <TranslateTransform>
              <TranslateTransform.X>
                <Binding Path="Width"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"
                         Converter="{StaticResource MathConverterSingleValue}"
                         ConverterParameter="{}-{0}/2"/>
              </TranslateTransform.X>
              <TranslateTransform.Y>
                <Binding Path="Height"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"
                         Converter="{StaticResource MathConverterSingleValue}"
                         ConverterParameter="{}-{0}/2"/>
              </TranslateTransform.Y>
            </TranslateTransform>
            <ScaleTransform>
              <ScaleTransform.ScaleX>
                <Binding Path="Scale"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
              </ScaleTransform.ScaleX>
              <ScaleTransform.ScaleY>
                <MultiBinding Converter="{StaticResource MathConverterMultiValue}"
                              ConverterParameter="{}({1}-({0}-{0}*{2}))/{1}">
                  <Binding Path="Width"
                           RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
                  <Binding Path="Height"
                           RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
                  <Binding Path="Scale"
                           RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
                </MultiBinding>
              </ScaleTransform.ScaleY>
            </ScaleTransform>
            <RotateTransform>
              <RotateTransform.Angle>
                <Binding Path="Angle"
                         RelativeSource="{RelativeSource AncestorType={x:Type control:BorderEx}}"/>
              </RotateTransform.Angle>
            </RotateTransform>
          </TransformGroup>
        </Setter.Value>
      </Setter>
    </Style.Setters>
  </Style>
  <Style TargetType="{x:Type control:DeleteButton}"
         BasedOn="{StaticResource {x:Type Button}}">
    <Style.Setters>
      <Setter Property="Width"
              Value="20"/>
      <Setter Property="Height"
              Value="20"/>
      <Setter Property="Foreground"
              Value="White"/>
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="Red"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type Button}"
         BasedOn="{StaticResource {x:Type Button}}">
    <Style.Setters>
      <Setter Property="Padding"
              Value="4,0,4,0"/>
    </Style.Setters>
  </Style>
  <Style TargetType="TextBlock"
         BasedOn="{StaticResource {x:Type TextBlock}}">
    <Style.Setters>
      <Setter Property="TextTrimming"
              Value="CharacterEllipsis"/>
      <Setter Property="VerticalAlignment"
              Value="Center"/>
    </Style.Setters>
  </Style>
  <Style TargetType="CheckBox"
         BasedOn="{StaticResource {x:Type CheckBox}}">
    <Style.Setters>
      <Setter Property="VerticalContentAlignment"
              Value="Center"/>
    </Style.Setters>
  </Style>
  <Style TargetType="{x:Type TextBox}"
         BasedOn="{StaticResource {x:Type TextBox}}">
    <Style.Setters>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
              <ScrollViewer x:Name="PART_ContentHost"
                            Focusable="false"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style.Setters>
    <Style.Triggers>
      <Trigger Property="IsEnabled"
               Value="False">
        <Setter Property="Opacity"
                Value="0.56"/>
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="BorderBrush"
                Value="#FFC5DAED"/>
      </Trigger>
      <Trigger Property="IsFocused"
               Value="True">
        <Setter Property="BorderBrush"
                Value="#FFB5CFE7"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>