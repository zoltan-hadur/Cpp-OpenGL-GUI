<Window x:Class="Json4CPP.Visualizer.View.VisualizerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Json4CPP.Visualizer.View"
        xmlns:vm="clr-namespace:Json4CPP.Visualizer.ViewModel"
        xmlns:control="clr-namespace:Json4CPP.Visualizer.Control"
        mc:Ignorable="d"
        Title="Json4CPP Visualizer"
        WindowStartupLocation="CenterOwner"
        WindowStyle="SingleBorderWindow"
        FontSize="16"
        Width="600"
        Height="600"
        d:DesignHeight="1450" d:DesignWidth="600"
        d:DataContext="{d:DesignInstance vm:VisualizerWindowVMDesign, IsDesignTimeCreatable=True}">
  <Window.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Json4CPP.Visualizer;Component/Themes/Generic.xaml"/>
      </ResourceDictionary.MergedDictionaries>
      <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      <Style x:Key="ReadOnlyTextBoxStyle"
             TargetType="{x:Type TextBox}"
             BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsChecked, ElementName=EditMode}"
                       Value="False">
            <Setter Property="BorderBrush"
                    Value="Transparent"/>
            <Setter Property="IsReadOnly"
                    Value="True"/>
            <Setter Property="Focusable"
                    Value="False"/>
            <Setter Property="Cursor"
                    Value="Arrow"/>
          </DataTrigger>
          <DataTrigger Binding="{Binding Path=IsChecked, ElementName=EditMode}"
                       Value="True">
            <Setter Property="MinWidth"
                    Value="30"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
      <Style x:Key="ObjectOrArrayStyle"
             TargetType="{x:Type TextBox}"
             BasedOn="{StaticResource ReadOnlyTextBoxStyle}">
        <Style.Triggers>
          <DataTrigger Binding="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type control:TreeViewItemEx}}}"
                       Value="True">
            <Setter Property="Foreground"
                    Value="LightGray"/>
          </DataTrigger>
          <DataTrigger Value="True">
            <DataTrigger.Binding>
              <MultiBinding Converter="{StaticResource MathConverterMultiValue}"
                            ConverterParameter="{}{0} || {1}">
                <Binding Path="IsObject"/>
                <Binding Path="IsArray"/>
              </MultiBinding>
            </DataTrigger.Binding>
            <Setter Property="BorderBrush"
                    Value="Transparent"/>
            <Setter Property="IsReadOnly"
                    Value="True"/>
            <Setter Property="Focusable"
                    Value="False"/>
            <Setter Property="Cursor"
                    Value="Arrow"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>
    </ResourceDictionary>
  </Window.Resources>
  <Grid Margin="4">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <TextBlock Grid.Row="0"
               Text="{Binding Expression, StringFormat=Expression: {0}}"/>
    <Grid Grid.Row="1"
          Margin="0,4,0,4">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Button x:Name="ExpandAll"
              Grid.Column="0"
              Content="Expand all"
              Click="ExpandAll_Click"
              Margin="0,0,4,0"/>
      <Button x:Name="CollapseAll"
              Grid.Column="1"
              Content="Collapse all"
              Click="CollapseAll_Click"
              Margin="0,0,4,0"/>
      <Button x:Name="Stringify"
              Grid.Column="2"
              Content="Stringify"
              Click="Stringify_Click"/>
      <CheckBox x:Name="EditMode"
                Grid.Column="4"
                Content="Edit mode"
                d:IsChecked="True"/>
    </Grid>
    <control:TreeViewEx x:Name="TreeViewEx"
                        Grid.Row="2">
      <control:TreeViewItemEx Header="{Binding Json}"
                              ItemsSource="{Binding Json.Children}"
                              IsExpanded="True"
                              Deletable="False">
      </control:TreeViewItemEx>
      <control:TreeViewEx.Resources>
        <Style TargetType="{x:Type control:TreeViewItemEx}"
               BasedOn="{StaticResource {x:Type control:TreeViewItemEx}}">
          <Style.Setters>
            <d:Setter Property="IsExpanded">
              <Setter.Value>
                <MultiBinding Converter="{StaticResource MathConverterMultiValue}"
                              ConverterParameter="{}{0} || {1}">
                  <Binding Path="HasItems"
                           RelativeSource="{RelativeSource Self}"/>
                  <Binding Path="EmptyExpandable"
                           RelativeSource="{RelativeSource Self}"/>
                </MultiBinding>
              </Setter.Value>
            </d:Setter>
            <Setter Property="Focusable"
                    Value="False"/>
            <Setter Property="Margin"
                    Value="0,2,0,0"/>
            <Setter Property="EditMode"
                    Value="{Binding Path=IsChecked, ElementName=EditMode}"/>
            <Setter Property="EmptyExpandable">
              <Setter.Value>
                <MultiBinding Converter="{StaticResource MathConverterMultiValue}"
                              ConverterParameter="{}{0} &amp;&amp; ({1} || {2})">
                  <Binding Path="EditMode"
                           RelativeSource="{RelativeSource Self}"/>
                  <Binding Path="IsObject"/>
                  <Binding Path="IsArray"/>
                </MultiBinding>
              </Setter.Value>
            </Setter>
          </Style.Setters>
        </Style>
        <HierarchicalDataTemplate DataType="{x:Type vm:PairVM}"
                                  ItemsSource="{Binding Value.Children}">
          <!--<HierarchicalDataTemplate.ItemContainerStyle>
            <Style TargetType="{x:Type control:TreeViewItemEx}"
                   BasedOn="{StaticResource {x:Type control:TreeViewItemEx}}">
            </Style>
          </HierarchicalDataTemplate.ItemContainerStyle>-->
          <StackPanel Orientation="Horizontal">
            <TextBox Style="{StaticResource ReadOnlyTextBoxStyle}"
                     Text="{Binding Key}"/>
            <TextBox Text=": ">
              <TextBox.Style>
                <Style TargetType="{x:Type TextBox}"
                       BasedOn="{StaticResource {x:Type TextBox}}">
                  <Style.Setters>
                    <Setter Property="BorderBrush"
                            Value="Transparent"/>
                    <Setter Property="IsReadOnly"
                            Value="True"/>
                    <Setter Property="Focusable"
                            Value="False"/>
                    <Setter Property="Cursor"
                            Value="Arrow"/>
                  </Style.Setters>
                  <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                      <Setter Property="BorderBrush"
                              Value="Transparent"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </TextBox.Style>
            </TextBox>
            <TextBox Style="{StaticResource ObjectOrArrayStyle}"
                     Text="{Binding Value.Value}"/>
          </StackPanel>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type vm:JsonVM}"
                                  ItemsSource="{Binding Children}">
          <!--<HierarchicalDataTemplate.ItemContainerStyle>
            <Style TargetType="{x:Type control:TreeViewItemEx}"
                   BasedOn="{StaticResource {x:Type control:TreeViewItemEx}}">
            </Style>
          </HierarchicalDataTemplate.ItemContainerStyle>-->
          <TextBox Style="{StaticResource ObjectOrArrayStyle}"
                   Text="{Binding Value}"/>
        </HierarchicalDataTemplate>
      </control:TreeViewEx.Resources>
    </control:TreeViewEx>
  </Grid>
</Window>
